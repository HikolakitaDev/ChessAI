# V4

The fourth version of the chess engine adds a quiescence search to the alpha-beta pruning algorithm. The quiescence search is a way to extend the search tree to include more moves, but only when the game is quiet (i.e., there are no captures or checks). This helps to reduce the horizon effect and improve the overall strength of the engine.

The quiescence search is implemented in the `search.py` file. It is called from the `find_best_move` function, and it extends the search tree by calling itself recursively for each capture or check that is encountered. The quiescence search returns the best score that can be achieved by playing the moves in the search tree.

The engine also uses a hash table to store the best moves for each position. This helps to speed up the engine by avoiding the need to recalculate the best move for each position.

readme generated by WindSurf.

Note : I'm currently learning cpp so that I can make a faster version with it.


